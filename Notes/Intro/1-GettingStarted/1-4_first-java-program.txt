Objective => how to write and execute your first Java
program.
    +On IntelliJ's home-screen, select "+Create New Project".
    +On the far left side of screen make sure Java is highlighted.
    +In the middle of screen, next to "Project SDK:",select the
    +version of Java you would like to use for your project.
    +SDK stands for software development kit.
    +An SDK is a collection of tools that you need to develop
    +an application for a specific software framework.
    +To develop applications in Java you need a Java SDK,
    +which is also referred to as a JDK.
    +If you are not able to select a version of Java in "Project SDK"
    +you will need to download a JDK.
    +Once you have selected a JDK, click on "next" at the bottom
    +of the screen.
    +This will take you to a new page. On this page, select
    +"Create project from template".
    +Click "next" at the bottom of the screen and on the new
    +page proceed to give your project a name next to the
    +"Project name: " field.
    +Under "Project name: " you'll see a field labelled
    +"Base package: ". In part, in Java, a class is a container
    +for related methods. In this same vein, a package is a container
    +for related classes. Make sure that the new project you have
    +created is in the appropriate package as any classes you create
    +in this project will belong to the package you assign to
    +"Base package: ".
    +When you click "next" you should see a file titled "Main.java".

To the left of your Main.java file there should be a Project panel.
In this panel, you'll be able to see all the folders and files in your
project. If you expand your project folder, you should see your
source folder (src). Your base package(itself a folder) should be located
within your "src" folder. Inside your base package folder is where
your Main.java file should be located. By convention, all Java files
have to have a .java file extension. The first line of code you see in
your Main.java file should be the package statement. Right below the
package statement should be the Main class of the file. This may not seem
important for your own files but could be incredibly useful to helping
you orient yourself when reading other people's code.

Newbie lesson => the main method in your program, which is a member
of the Main class, should always be declared as static.

Below the Main class should be a call to the main method. We will
write our program inside the main method's body.

Let's print something to the console.

The first step to take is to pay a visit to the System class.

System => a class in Java that is defined in the java.lang package.
The System class has various members, one of which is the field
labelled "out". "Out" in "system.out" is a PrintStream field. PrintStream
itself is a Java defined class. Hence, we can use the dot
operator on "out" to see the methods defined in the PrintStream class. "println"
is one of those methods. Chained together, System.out.println allows us to display
text to the console. So if you pass

"Dear Slim, I wrote you but you still ain\'t callin\'"

to System.out.println(), inside the main method of the Main class, you would
have written your first program.

package com.helloworldrequiem;

public class Main {

    public static void main (String[] args) {

        System.out.println("Dear Slim, I wrote you but you still ain\'t callin\'")

    }

}

To Self
-------

When you review see how you feel about lines 54-55.






