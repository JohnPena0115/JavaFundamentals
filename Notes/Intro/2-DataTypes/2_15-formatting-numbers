Quite often when we work with numbers we'll
need to format them in the way we are use to
seeing currencies displayed ($2,357,911) or as
a percentage value (10%) ...

The NumberFormat class in Java comes in handy
for these situations. The NumberFormat class
is defined in the java.text package so will
need to import it before we can use it.

The NumberFormat class is an abstract class
and therefore we can not use the "new" operator
to create an instance of them.

Throws an exception => NumberFormat currency = new NumberFormat()

However, we can use a get factory method on abstract classes to
create new instances of them. A get factory method is a method
that creates an instance of an abstract class and returns it.
For NumberFormat, getCurrencyInstance() would be considered a
factory method. So instead of writing

NumberFormat currency = new NumberFormat();

    we would write

NumberFormat currency = NumberFormat.getCurrencyInstance();

Once an object of the NumberFormat class is created, it will
have access to the .format() method. The format method will
return a string representation of its argument formatted as a
currency. So if you wrote

String currency = currency.format(235791113.97)

you would get an output of

$235,791,113.97


Formatting a Number as a Percent
--------------------------------

To format a number as a percentage, you would first create
a getPercentInstance object of the NumberFormat class.

    NumberFormat percent = NumberFormat.getPercentInstance();

We would then be able to call the .format() method on this
object to convert an argument of 0.1 to 10% for instance.

    String result = percent.format(0.1);


Side-Bar
--------
1)
If you would like to rename any identifier in IntelliJ, the proper
way is to right click on the identifier and then choose Refactor from
the drop down menu. This is the prefer way because renaming one instance
of an identifier this way renames all the instances of that particular
identifier in your program. This helps reduce the possibility of errors.

2)
NumberFormat percent = NumberFormat.getPercentInstance();
String result = percent.format(0.1);

could be rewritten as

String result = NumberFormat.getPercentInstance().format(0.1);